[day03]

1.연산자 Operator

	1) 종류
	단항연산자 : 연산자 혼자 사용 : + - (타입) ++ -- ~ !
	이항연산자 : 산술연산자 : + - / * %
		     비교연산자 : < <= > >= == != : 결과는 true / false
		     논리연산자 : && || 
	삼항연산자 : ? :
	대입연산자 : =
	복합대입연산자 : += -= *= /= %= : 산술 + 대입
	(쉬프트/비트연산자)
	증감연산자 : ++ -- : 전위형 - 내가먼저 ++a / 후위형 : 다른것 먼저

	2) 연산자 우선순위 (높은순)
	단항연산자	: ++ -- (전위형) ()
			  양수+ 음수- ++ --(후위형) ~ !
	형변환		: (타입)
	산술연산자	: * / %
			  + -
	(쉬프트연산자)
	비교연산자	: < <= > >=, instanceof(클래스타입 구분하는 연산자)
			  == !=
	(비트연산자)
	논리연산자	: &&
			  ||
	삼항연산자	:  ? :
	(복합)대입연산자: = += -= *= /= %=

2. 제어문

	- 조건문	: if, switch
	- 반복문	: while, for, do-while, 업그레이드 for문 
	- 보조제어문	: break, continue
			break :강제종료
			continue : 주로 반복문 안에서 사용되면 다음 실행문을 건너 뛰고 시작점(조건식 검사)으로 돌아감

3. 조건문 if 

	조건이 참이면 영역안의 코드를 실행한다.
	
	1) 구조

	#1.if (조건식){
		// 조건식이 참일경우 실행할 문장들.
	}
	
	조건식 : 비교연산이나 논리연산이 혼합된 식으로 구성한다.
	         결과는 true / false
	
	#2,
	if (조건식){
		//조건식이 참일 경우 실행할 문장들....

	}
	else{
		//조건식이 거짓인 경우 처리해야되는 문장들...
	}
	else : 혼자사용 불가. if와 else의 순서가 바뀌어도 안된다.
		실행은 둘 중에 하나만 한다.

	#3.
	if(조건식){
		// 해당 조건식이 참일경우 처리할 문장들
	}
	else if(조건식){
		// 해당 조건식이 참일경우 처리할 문장들
	}
	else if(조건식){
		// 해당 조건식이 참일경우 처리할 문장들
	}
	else if(조건식){
		// 해당 조건식이 참일경우 처리할 문장들
	}
	else if(조건식){
		// 해당 조건식이 참일경우 처리할 문장들
	}
	else{
		//조건식이 모두 거짓인 경우 처리해야되는 문장들...
	}

	조건이 여러개일 경우 사용.
	하나의 세트로 생각하여 하나만 실행된다.

4. switch

	다중선택문 : 하나의 변수값을 평가하여, 각 값에 대해 개별적인 처리를 하는 문장.

	1) 구조
		switch(변수){
		case 값:
			수행문들........
			break;
		case 값2:
			수행문들........
			break;
		case 값3:
			수행문들........
			break;
		default :
			수행문들........
			break;		//생략이 가능.
		}

	2) 특징과 주의점
		- if문으로 대체 가능
		- 비교해볼 case가 많다면, if문보다 가독성 높게 코드 작성 가능.
		- switch 문으로 평가할 수 있는 변수는 주로 정수형, String (String 은 1.7버전부터 사용가능)
		- case 다음에는 반드시 하나의 값이 와야한다.
		- case 0 , case 1, case2 .. 반드시 정렬할 필요 없다.
		- default는 생략가능 . 옵션 
		- break는 다음 case 가 실행 되지 않도록 할 경우 사용한다. 