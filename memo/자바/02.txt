[day02]

1. 출력문

	1)출력문 종류
	System.out.println(); : 엔터기능O
	System.out.print(); : 엔터기능x
	System.out.printf(); : 엔터기능x,서식문자 이용.

	1-1)서식문자
		: 데이터 타입에 따라 다른 서식문자가 존재

		정수 : %d
		실수 : %f
		문자 : %c
		문자열 : %s 

		System.out.printf("서식문자".출력할 값 또는 변수);

	2)출력문 구조
	System.out.println(값); : 값이 출력
	숫자 출력 : 값 10,100
	문자 1개 출력 : '문자' : 홑따옴표로 묶기
	문자열 출력 : "문자열" : 겹따옴표로 묶기

	3)출력문 내 연산

		숫자+숫자 ==> 연산된 결과인 숫자값 출력
		"문자" + "문자"==> 문자로 연결된 문자열 출력
		"문자" + 숫자 ==> 문자로 연결된 문자 출력
		'문자' + 숫자 ==> 아스키코드랎 + 숫자가 연산된 결과값을 숫자로 출력

	4)이스케이프 문자
		: 출력문 안에서 어떠한 기능을 가지고 있는 특수 문자. (홑따옴표나 겹따옴표 안에 작성되는 특수기능 문자)

		\n : 줄바꿈
		\t : 탭간격주기
		\" : 겹따옴표를 문자로 출력할때 사용
		\' : 홑따옴표로 문자로 출력할때 사용
		\\ : 역슬래쉬를 문자로 출력할때 사용

2.형변환(Casting, type conversion)
	
	boolean 타입을 제외한 다른 타입들을 변환 시키는 것

	(타입)변수

	char < int < long < float < double

	1) 다운케스팅 / 디모션 / (강제형변환) : 큰타입 -> 작은타입 : 형변환 공식을 반드시 적어준다. 
		
		int num = 300;			//4바이트
		byte b = num; => error		//1바이트
		byte b = (byte)num;	==> b = 44 ( 300%256 == 44 ) 에러는 발생되지 않으나 올바른 값이 대입되지는 않는다.
		
		double d = 1.5;
		int i = (int)d;		==> i = 1


		ex) (int)3.5 + 4 = 7
		(double)4 + 4 = 8

	2) 업케스팅 / 프로모션 / (자동형변환) : 작은타입 -> 큰타입 : 형변환 공식 생략이 가능하나 적어주는것을 습관화하자.
		double d = 3.14 *10; d=31.4

		ex )
		5 + 3.5 = 8.5
		5 / 2 = 2
		i / i = i
		5 / 2.0 = 2.5
		i/ d = d

3. 입력문

	1) System.in : 키보드 장치를 제어, 키 입력을 받는 표준 입력 스트림 객체
			키보드 입력 -> System.in 입력스트림 -> 바이트 데이터 -> 자바 응용프로그램
			--> 읽을수 있는 문자로 변경
	2) Scanner : 자바패키지에서 제공하는 클래스. 원하는 타입으로 변환을 해줌.
			키보드 입력 -> System.in -> 바이터데이터 -> Scanner -> 형변환된 데이터
			-> 자바응용프로그램

		#1. import 문 사용 : Scanner 클래스가 저장되어있는 자바에서 제공하는 패키지 가져오기
			import java.util.Scanner;
		#2. Scanner 객체 생성
			Scanner sc = new Scanner(System.in);
		#3. 입력받기			
			String str = sc.nextLine(); // 문자열 입력받기
			
			Scanner 클래스는 사용자가 입력하는 키 값을 공백문자(" ", "\t", "\n")를 기준으로 분리하여 토큰 단위로 읽는다.

			# 입력 받기 주요 메서드
			메서드명		리턴타입
			------------------------------------------------------
			next()			String			다음 토큰을 문자열로 리턴 문자열을 토큰 단위로 리턴(가져옴)
			nextInt()		int			다음 토큰을 int타입으로 리턴
			nextDouble()		double			다음 토큰을 double 타입으로 리턴
			nextBoolean()		boolean			다음 토큰을 boolean 타입으로 리턴(사용x)
			nextLine()		String			\n을 포함하는 한 라인을 읽고 \n을 버린 나머지 한줄 문자열을 리턴
							
			
		#4. Scanner 객체 닫기(객체소멸시키기)
			sc.close();
		
	



